
Explicación:

1 Crear carpeta con los 3 archivos docker.

2 Hacer un "docker compose run web django-admin startproject nombreProyectoNuevo ." para generar el proyecto.

3 Arrancar Docker y pararlo.

4 Hacer un "docker compose run web python manage.py startapp nombreAplicacionNueva" para generar la aplicación cuyo nombre tiene que ser distinto del proyecto.

5 Añadir en los settings del proyecto la aplicación nueva.

6 Probar que todo funciona correctamente poniendo en url :

    from taskForm import views
    urlpatterns = [
        path('', views.home, name="home")
    ] 

posteriormente en views:

    def home(request):
    return HttpResponse("HOLA")

7 Dentro de la carpeta de la aplicacion nueva, a la altura de la carpeta migrations , hacemos la carpeta templates y dentro de ella , otra carpeta con el nombre que queramos . Aquí pondremos los htmls que vayamos a utilizar

8 En settings.py en TEMPLATES DIRS ponemos 'templates'

9 Cambiar el contenido de views y apuntar al archivo home :

    def home(request):
    return render(request, 'nombreDeLaCarpetaDeLosHtmls/home.html')

-------------------NOTAS:-------------------

-TODAS las paginas html que pongamos las tenemos que declarar en el archivo urls, por ejemplo:
    path("resultsPage/", views.resultsPage, name="resultsPage")

-Despues de declararlas en ese archivo tenemos que crear su correspondiente metodo en views , de forma que estara asociado al path del paso anterior
------------------------------------------
PARA CREAR UNA APLICACION DENTRO DE UN PROYECTO.
docker compose run web python manage.py startapp portfolio 

tenemos que añadir en settings , el link de las paginas nuevas:
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'portfolio',
]
